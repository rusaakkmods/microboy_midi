#include "display.h"
#include <U8g2lib.h>

U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

static const unsigned char logo_bits[] U8X8_PROGMEM = {0x00,0x00,0x00,0x00,0xe0,0xff,0xff,0x0f,0x20,0x00,0x40,0x08,0x38,0x00,0x40,0x08,0x08,0x00,0x40,0x08,0x0e,0x00,0x40,0x08,0x82,0xff,0xff,0x0f,0xc2,0xf9,0xff,0x0f,0xc2,0xf9,0xff,0x0f,0x42,0xe0,0xe7,0x0c,0x42,0xe0,0x4b,0x09,0xc2,0xf9,0x43,0x08,0xc2,0x49,0xe6,0x0c,0xfe,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xfe,0xff,0xff,0x0f,0x86,0x63,0x38,0x0c,0x56,0x5d,0xd7,0x0f,0x56,0x5d,0x17,0x0c,0x56,0x5d,0xf7,0x0d,0x56,0x63,0x18,0x0e,0xfe,0xff,0xff,0x0f,0x00,0x00,0x00,0x00};
static const unsigned char main_bits[] U8X8_PROGMEM = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4e,0x22,0xfc,0x3f,0x4e,0x32,0xfc,0x3f,0x92,0x49,0xfc,0x3f,0x92,0x71,0xfc,0x3f,0x52,0x32,0xfc,0x3f,0x52,0x4a,0xfc,0x3f,0x52,0x4a,0xfc,0x3f,0x56,0x22,0xfc,0x3f,0x52,0x22,0xfc,0x3f,0x52,0x42,0xfc,0x3f,0x52,0x4a,0xfc,0x3f,0x5a,0x22,0xfc,0x3f,0x4e,0x22,0xfc,0x3f,0x4e,0x22,0xfc,0x3f,0xde,0x4b,0xfc,0x3f,0x52,0x22,0xfc,0x3f,0x42,0x22,0xfc,0x3f,0x42,0x12,0xfc,0x3f,0x5e,0x2a,0xfc,0x3f,0x52,0x22,0xfc,0x3f,0x82,0x71,0xfc,0x3f,0x82,0x79,0xfc,0x3f,0x52,0x12,0xfc,0x3f,0x92,0x71,0xfc,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x06,0x00,0x00,0x30,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x1e,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x00,0x00,0xda,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x00,0x00,0xda,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x00,0x00,0xea,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x00,0x00,0xf6,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x00,0x00,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
static const unsigned char menu_bits[] U8X8_PROGMEM = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xd8,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x1b,0x00,0x00,0x6c,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x36,0x00,0x00,0x36,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x6c,0x00,0x00,0x1b,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xd8,0x00,0x80,0x0d,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xb0,0x01,0xc0,0x06,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x60,0x03,0x60,0x03,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xc0,0x06,0xb0,0x01,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x80,0x0d,0xb0,0x01,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x80,0x0d,0x60,0x03,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xc0,0x06,0xc0,0x06,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x60,0x03,0x80,0x0d,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xb0,0x01,0x00,0x1b,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xd8,0x00,0x00,0x36,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x6c,0x00,0x00,0x6c,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x36,0x00,0x00,0xd8,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x1b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

#define NUM_CURSORS 5
Cursor cursors[NUM_CURSORS] = {
    {6, 9, 19, 13, config.outputChannel[0], RANGE_1_16},
    {38, 9, 19, 13, config.outputChannel[1], RANGE_1_16},
    {70, 9, 19, 13, config.outputChannel[2], RANGE_1_16},
    {102, 9, 19, 13, config.outputChannel[3], RANGE_1_16},
    {112, 24, 15, 8, config.velocity, RANGE_0_127}
};

#define NUM_CHANNEL_SUBMENU 4
SubMenu channelSubMenus[NUM_CHANNEL_SUBMENU] = {
    {"PU1", RANGE_1_16, "1"},
    {"PU2", RANGE_1_16, "2"},
    {"WAV", RANGE_1_16, "3"},
    {"NOI", RANGE_1_16, "4"}
};

#define NUM_MIDI_SUBMENU 5
SubMenu midiSubMenus[NUM_MIDI_SUBMENU] = {
    {"Velocity", RANGE_0_127, "100"},
    {"CC", ON_OFF, "OFF"}, 
    {"PC", ON_OFF, "OFF"}, 
    {"Realtime", ON_OFF, "OFF"}, 
    {"Clock", ON_OFF, "OFF"}
};

#define NUM_READER_SUBMENU 2
SubMenu readerSubMenus[NUM_READER_SUBMENU] = {
    {"byte delay", RANGE_1000_5000_BY_100, "2000"},
    {"ex. correct", ON_OFF, "OFF"}
};

#define NUM_CONFIG_SUBMENU 2
SubMenu configSubMenus[NUM_CONFIG_SUBMENU] = {
    {"Save", ACTION, ""},
    {"Default", ACTION, ""}
};

#define NUM_ABOUT_SUBMENU 3
SubMenu aboutSubMenus[NUM_ABOUT_SUBMENU] = {
    {"Firmware", TEXT, _VERSION},
    {"Author", TEXT, _AUTHOR},
    {"GitHub", TEXT, _GITHUB}
};

#define NUM_MAIN_MENU 5
MainMenu mainMenus[NUM_MAIN_MENU] = {
    {"CHANNELS", NUM_CHANNEL_SUBMENU, channelSubMenus},
    {"MIDI", NUM_MIDI_SUBMENU,  midiSubMenus},
    {"READER", NUM_READER_SUBMENU, readerSubMenus},
    {"CONFIG", NUM_CONFIG_SUBMENU, configSubMenus},
    {"ABOUT", NUM_ABOUT_SUBMENU, aboutSubMenus}
};

Display display;

void display_load()
{
    display.currentState = MAIN_DISPLAY;
    display.mute_pu1 = false;
    display.mute_pu2 = false;
    display.mute_wav = false;
    display.mute_noi = false;
    display.velocity = 100;
    display.mainCursorIndex = 0;
    display.mainCursors = cursors;
    display.cursorSize = NUM_CURSORS;
    display.menuIndex = 0;
    display.submenuIndex = 0;
    display.mainMenus = mainMenus;
    display.mainMenuSize = NUM_MAIN_MENU;
}

void display_logo()
{
    u8g2.clearBuffer();
    u8g2.setFontMode(1);
    u8g2.setBitmapMode(1);
    u8g2.drawXBMP(21, 4, 29, 23, logo_bits);
    u8g2.setFont(u8g2_font_haxrcorp4089_tr);
    u8g2.drawStr(52, 14, _USB_MANUFACTURER);
    u8g2.setFont(u8g2_font_profont10_tr);
    u8g2.drawStr(53, 23, _YEAR);
    u8g2.setDrawColor(2);
    u8g2.drawBox(52, 16, 21, 8);
    u8g2.sendBuffer();
}

void display_firmware()
{
    u8g2.clearBuffer();
    u8g2.setFontMode(1);
    u8g2.setBitmapMode(1);
    u8g2.setFont(u8g2_font_profont29_tr);
    u8g2.drawStr(1, 21, _USB_PRODUCT);
    u8g2.setFont(u8g2_font_profont10_tr);
    u8g2.drawStr(98, 31, _VERSION);
    u8g2.setDrawColor(2);
    u8g2.drawBox(80, 1, 47, 21);
    u8g2.setDrawColor(1);
    u8g2.setFont(u8g2_font_profont11_tr);
    u8g2.drawStr(1, 31, _PRODUCT_LINE);
    u8g2.sendBuffer();
}

void display_splash()
{
    display_logo();
    delay(1000);
    display_firmware();
    delay(1000);
}

void display_disconnected()
{
    //todo
}

void display_main()
{
    u8g2.clearBuffer();
    u8g2.setFontMode(1);

    u8g2.setBitmapMode(1);
    u8g2.drawXBMP(0, 0, 128, 32, main_bits);

    //mute & signal
    u8g2.setDrawColor(2);
    u8g2.setFont(u8g2_font_profont10_tr);
    
    //pu1
    u8g2.drawStr(19, 6, "m");
    u8g2.drawBox(25, 2, 4, 4); //todo signal

    //pu2
    u8g2.drawStr(51, 6, "m");
    u8g2.drawBox(57, 2, 4, 4); //todo signal

    //wav
    u8g2.drawStr(83, 6, "m");
    u8g2.drawBox(89, 2, 4, 4); //todo signal

    //noi
    u8g2.drawStr(115, 6, "m");
    u8g2.drawBox(121, 2, 4, 4); //todo signal

    //velocity
    u8g2.setDrawColor(1);
    u8g2.setFont(u8g2_font_profont10_tr);
    u8g2.drawStr(112, 31, "100");

    int vel = map(display.velocity, 0, 127, 0, 103);
    u8g2.setDrawColor(2);
    u8g2.drawBox(7, 26, vel, 4); //velocitygauge bar

    //channels
    u8g2.setDrawColor(1);
    u8g2.setFont(u8g2_font_profont17_tr);
    u8g2.drawStr(7, 21, "01");
    u8g2.drawStr(39, 21, "02");
    u8g2.drawStr(71, 21, "03");
    u8g2.drawStr(103, 21, "04");

    //String(display.cursorSize).c_str()
    Cursor cu = display.mainCursors[display.mainCursorIndex];
    u8g2.setDrawColor(2);
    u8g2.drawBox(cu.x, cu.y, cu.w, cu.h);

    u8g2.sendBuffer();
}

void display_menu()
{
    u8g2.clearBuffer();
    u8g2.setFontMode(1);
    u8g2.setBitmapMode(1);
    u8g2.drawXBMP(0, 0, 128, 32, menu_bits);
    u8g2.setDrawColor(2);
    u8g2.setFont(u8g2_font_profont17_tr);
    u8g2.drawStr(25, 22, display.mainMenus[display.menuIndex].name);
    u8g2.sendBuffer();
}

void display_submenu()
{
   //todo
}

void display_init()
{   
    display_load();

    u8g2.begin();

    display_splash();
}

void display_refresh()
{
    switch (display.currentState) {
        case MAIN_DISPLAY:
            display_main();
        break;

        case MAIN_MENU:
            display_menu();
        break;

        case SUBMENU:
            display_submenu();
        break;
    }
}